---
version: '2.1.0'

environment:
  defaultServices:
    - name: 'lc-test'
    # - name: 'nginx'
    # - name: 'postgres-db'
    - name: 'grpc-echo'
    # - name: 'redis'

    
services:
  - name: "lc-test"
    helm:
      version: "3.12.0"
      repository: 'vmelikyan/lc-test'
      branchName: 'main'
      args: "--debug"
      chart:
        name: './helm/lc-apps'
        values:
          - 'image="{{{lc-test_dockerImage}}}"'
          - 'env.CLIENT_HOST={{grpc-echo_internalHostname}}:8080'
          - 'env.TEST_TEST=test'
          - 'env.WHAT=is-this'
        valueFiles:
          - 'sysops/helm/common.yaml'
          - 'sysops/helm/lfc/service/app.yaml'
      docker:
        builder:
          engine: 'buildkit'
        defaultTag: 'main'
        app:
          dockerfilePath: 'sysops/dockerfiles/app.dockerfile'
          env:
            CLIENT_HOST: '{{grpc-echo_internalHostname}}:8080'
            TEST_TEST: 'test'
            WHAT: "is-this"
          ports:
            - 8080  
  
  - name: "grpc-echo"
    github:
      repository: "vmelikyan/lc-test"
      branchName: "main"
      docker:
        builder:
          engine: 'buildkit'
        defaultTag: "main"
        app:
          dockerfilePath: "grpc-echo/Dockerfile"
          ports:
            - 8080
          env:
            COMPONENT: "app"
            ENV: "lifecycle"
      deployment:
        public: true
        resource:
          cpu:
            request: '10m'
          memory:
            request: '50Mi'
        readiness:
          tcpSocketPort: 8080
        hostnames:
          host: '0env.com'
          defaultInternalHostname: 'grpc-echo-dev-0'
          defaultPublicUrl: 'grpc-echo-dev-0.0env.com'

  # - name: 'postgres-db'
  #   docker:
  #     dockerImage: 'postgres'
  #     defaultTag: '14.3-alpine'
  #     ports:
  #       - 5432
  #     env:
  #       POSTGRES_USER: 'postgres_user'
  #       POSTGRES_PASSWORD: 'mysecretpassword'
  #       POSTGRES_DB: 'postgres_db'
  #       SERVICE: 'postgres-db'
  #       PGDATA: '/var/lib/postgresql/data/pgdata'
  #     deployment:
  #       public: false
  #       resource:
  #         cpu:
  #           request: '10m'
  #         memory:
  #           request: '100Mi'
  #       readiness:
  #         tcpSocketPort: 5432
  #       serviceDisks:
  #         - name: 'postgres-volume'
  #           mountPath: '/var/lib/postgresql/data'
  #           accessModes: 'ReadWriteOnce'
  #           storageSize: '5Gi'

  - name: "postgres-db"
    helm:
      repository: "vmelikyan/lc-test"
      branchName: "main"
      chart:
        name: "postgresql"
        valueFiles:
          - 'sysops/helm/lfc/db/db.yaml'

  - name: "redis"
    deploymentDependsOn:
      - 'postgres-db'
    helm:
      repository: "vmelikyan/lc-test"
      branchName: "main"
      chart:
        name: "redis"
  
  # - name: "nginx"
  #   defaultUUID: "dev-0"
  #   docker:
  #     dockerImage: "nginx"
  #     defaultTag: "latest"
  #     ports:
  #       - 80
  #     deployment:
  #       public: true
  #       resource:
  #         cpu:
  #           request: "10m"
  #         memory:
  #           request: "200Mi"
  #       readiness:
  #         tcpSocketPort: 80
